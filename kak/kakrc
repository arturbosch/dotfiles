source "%val{config}/plugins/plug.kak/rc/plug.kak"

# defaults
map global normal <c-q> ': quit<ret>'
map global normal <c-s> ': write<ret>'
set-option global tabstop 4
add-highlighter global/ number-lines

# copy paste to system
hook global NormalKey y|d|c %{ nop %sh{
      printf %s "$kak_main_reg_dquote" | xsel --input --clipboard
}}
map global user P '!xsel --output --clipboard<ret>'
map global user p '<a-!>xsel --output --clipboard<ret>'

# fzf
plug "andreyorst/fzf.kak"
map global normal <c-p> ': fzf-mode<ret>'

# plugins
plug "occivink/kakoune-sudo-write"

# editing

hook global WinCreate [^*]* %{
    editorconfig-load
}

hook global BufCreate .*\.(kt|kts) %{
    set-option buffer filetype kotlin
}

hook global InsertCompletionShow .* %{
    map window insert <tab> <c-n>
    map window insert <s-tab> <c-p>
}

hook global InsertCompletionHide .* %{
    unmap window insert <tab> <c-n>
    unmap window insert <s-tab> <c-p>
}

# language server support
plug "ul/kak-lsp" do %{
	cargo install --locked --force --path .
} config %{
	eval %sh{echo ${kak_opt_lsp_cmd} >> /tmp/kak-lsp.log}
	set global lsp_cmd "kak-lsp -s %val{session} -vvv --log /tmp/kak-lsp.log"

    set global lsp_diagnostic_line_error_sign '║'
    set global lsp_diagnostic_line_warning_sign '┊'

    define-command lsp-restart -docstring 'restart lsp server' %{ lsp-stop; lsp-start }

    hook global KakEnd .* lsp-exit
}

hook global WinSetOption filetype=(go|rust|kotlin|java|groovy) %{
    lsp-enable-window
}

